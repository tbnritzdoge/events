name: "CD: Release"
on:
  release:
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14]
    steps:
      - name: "[INIT] Checkout repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "[INIT] Setup Node.js ${{ matrix.node }}"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: "[INIT] Restore dependency cache"
        id: cache-restore
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - name: "[INIT] Install dependencies"
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        run: npm ci
      - name: "[EXEC] Release"
        run: |
          npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npx semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: tbnritzdoge (CI)
          GIT_AUTHOR_EMAIL: doge@helper.wtf
          GIT_COMMITTER_NAME: tbnritzdoge (CI)
          GIT_COMMITTER_EMAIL: doge@helper.wtf
      - name: "[POST] Clean up failed release"
        if: failure()
        run: git reset HEAD^ && git push --force